"use strict";(self.webpackChunksasm_website=self.webpackChunksasm_website||[]).push([[8485],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(n),f=o,d=m["".concat(s,".").concat(f)]||m[f]||p[f]||i;return n?r.createElement(d,a(a({ref:t},l),{},{components:n})):r.createElement(d,a({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},715:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(3117),o=(n(7294),n(3905));const i={title:"Compare",id:"compare_instruction"},a="Compare",c={unversionedId:"Instructions/compare_instruction",id:"Instructions/compare_instruction",title:"Compare",description:"The compare instruction compare two arguments to do after that something depending on if the two arguments are the same. This instruction really do a substraction and see if the result is 0.",source:"@site/docs/Instructions/compare.md",sourceDirName:"Instructions",slug:"/Instructions/compare_instruction",permalink:"/sasm-wiki/docs/Instructions/compare_instruction",draft:!1,editUrl:"https://github.com/Vinz2008/sasm-wiki/tree/main/docs/docs/Instructions/compare.md",tags:[],version:"current",frontMatter:{title:"Compare",id:"compare_instruction"},sidebar:"tutorialSidebar",previous:{title:"And",permalink:"/sasm-wiki/docs/Instructions/and_instruction"},next:{title:"Launch",permalink:"/sasm-wiki/docs/Instructions/launch_instruction"}},s={},u=[{value:"Example",id:"example",level:2},{value:"Equivalent in assembly",id:"equivalent-in-assembly",level:2}],l={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"compare"},"Compare"),(0,o.kt)("p",null,"The compare instruction compare two arguments to do after that something depending on if the two arguments are the same. This instruction really do a substraction and see if the result is 0."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"start:\n    move edx <= 20\n    compare edx <= 20\n")),(0,o.kt)("h2",{id:"equivalent-in-assembly"},"Equivalent in assembly"),(0,o.kt)("p",null,"The equivalent in asembly is ",(0,o.kt)("inlineCode",{parentName:"p"},"cmp")))}p.isMDXComponent=!0}}]);